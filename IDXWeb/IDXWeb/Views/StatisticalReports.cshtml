@using System.Configuration
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Master.cshtml";
}
<main class="sticky-footer-container-item --pushed">
    <div class="container top-space">
        @{
            IPublishedContent current = (CurrentPage);
            Stack<dynamic> pages = new Stack<dynamic>();
            while (current.Level > 1)
            {
                pages.Push(current);
                current = current.Parent;
            }
        }

        <ul class="breadcrumb block">
            <li><a href="/"><span class="fa fa-home"></span></a></li>
            @foreach (var page in pages)
            {
                var cls = page.Id == CurrentPage.Id ? "current" : "";
                if (page.DocumentTypeId != 1237)
                {
                    <li class="@cls"><a href="@page.Url">@page.Name</a></li>
                }
                else
                {
                    <li class="@cls"><a href="" class="disable"><span>@page.Name</span></li>
                }
            }
        </ul>
        <div class="page-title-container">
            <h1 class="page-title">@CurrentPage.Name</h1>
        </div>
        <div class="content-tab-container block --center">
            <div class="content-tab-item">
                <a href="#daily" class="content-tab-anchor statistic-tab-js is-active">@Umbraco.GetDictionaryValue("Daily")</a>
            </div>
            <div class="content-tab-item">
                <a href="#weekly" class="content-tab-anchor statistic-tab-js">@Umbraco.GetDictionaryValue("Weekly")</a>
            </div>
            <div class="content-tab-item">
                <a href="#monthly" class="content-tab-anchor statistic-tab-js">@Umbraco.GetDictionaryValue("Monthly")</a>
            </div>
            <div class="content-tab-item">
                <a href="#quarterly" class="content-tab-anchor statistic-tab-js">@Umbraco.GetDictionaryValue("Quarterly")</a>
            </div>
            <div class="content-tab-item">
                <a href="#yearly" class="content-tab-anchor statistic-tab-js">@Umbraco.GetDictionaryValue("Yearly")</a>
            </div>
        </div>
    </div>
    <div class="main-content content-push">
        <div class="container">
            <div class="statistic-container is-active" id="daily">
                <figure class="text-center">
                    <img id="imgDaily" src="">
                </figure>
            </div>
            <div class="statistic-container" id="weekly">
                <div class="block-double">
                    <div class="block flex v-center">
                        <span class="form-label-announcement">@Umbraco.GetDictionaryValue("search by year")</span>
                        <select id="weeklyFilter" name="year" id="" class="form-input form-input--block select2-js"></select>
                        <!-- <input type="text" class="form-input form-input--block select" placeholder="@Umbraco.GetDictionaryValue("enter name")"> -->
                    </div>
                    <div class="block flex v-center">
                        <span class="form-label-announcement">&nbsp;</span>
                        <button class="btn btn-primary" onclick="getStatisticWeekly()">@Umbraco.GetDictionaryValue("search")</button>
                    </div>
                    <table id="weeklyTable" class="table table--zebra table-content-page table-thead-nowrap width-block">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>@Umbraco.GetDictionaryValue("number")</th>
                                <th>@Umbraco.GetDictionaryValue("Description")</th>
                                <th>@Umbraco.GetDictionaryValue("Download")</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
            <div class="statistic-container" id="monthly">
                <div class="block-double">
                    <div class="block flex v-center">
                        <span class="form-label-announcement">@Umbraco.GetDictionaryValue("search by year")</span>
                        <select name="year" id="monthlyFilter" class="form-input form-input--block select2-js"></select>
                    </div>
                    <div class="block flex v-center">
                        <span class="form-label-announcement">&nbsp;</span>
                        <button class="btn btn-primary" onclick="getStatisticMonthly();">@Umbraco.GetDictionaryValue("search")</button>
                    </div>
                    <table id="monthlyTable" class="table table--zebra table-content-page table-thead-nowrap width-block">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>@Umbraco.GetDictionaryValue("number")</th>
                                <th>@Umbraco.GetDictionaryValue("Description")</th>
                                <th>@Umbraco.GetDictionaryValue("Download")</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
            <div class="statistic-container" id="quarterly">
                <div class="block-double">
                    <div class="block flex v-center">
                        <span class="form-label-announcement">@Umbraco.GetDictionaryValue("search by year")</span>
                        <select name="year" id="quarterlyFilter" class="form-input form-input--block select2-js"></select>
                        <!-- <input type="text" class="form-input form-input--block select" placeholder="@Umbraco.GetDictionaryValue("enter name")"> -->
                    </div>
                    <div class="block flex v-center">
                        <span class="form-label-announcement">&nbsp;</span>
                        <button class="btn btn-primary" onclick="getStatisticQuarterly();">@Umbraco.GetDictionaryValue("search")</button>
                    </div>
                    <table id="quarterlyTable" class="table table--zebra table-content-page table-thead-nowrap width-block">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>@Umbraco.GetDictionaryValue("number")</th>
                                <th>@Umbraco.GetDictionaryValue("Description")</th>
                                <th>@Umbraco.GetDictionaryValue("Download")</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
            <div class="statistic-container" id="yearly">
                <div class="block-double">
                    <div class="block flex v-center">
                        <span class="form-label-announcement">@Umbraco.GetDictionaryValue("search by year")</span>
                        <select name="year" id="yearlyFilter" class="form-input form-input--block select2-js"></select>
                        <!-- <input type="text" class="form-input form-input--block select" placeholder="@Umbraco.GetDictionaryValue("enter name")"> -->
                    </div>
                    <div class="block flex v-center">
                        <span class="form-label-announcement">&nbsp;</span>
                        <button class="btn btn-primary" onclick="getStatisticYearly();">@Umbraco.GetDictionaryValue("search")</button>
                    </div>
                    <table id="yearlyTable" class="table table--zebra table-content-page table-thead-nowrap width-block">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>@Umbraco.GetDictionaryValue("number")</th>
                                <th>@Umbraco.GetDictionaryValue("Description")</th>
                                <th>@Umbraco.GetDictionaryValue("Download")</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</main>

@section Scripts{
    @Html.Partial("scripts")
    <script type="text/javascript" src="/assets/js/vendor/datatables.min.js"></script>
    <script type="text/javascript">
        $(function () {
            var currentYear = moment().format('YYYY');
            for (var i = 0; i < @ConfigurationManager.AppSettings["maxYear"]; i++) {
                $('select[name="year"]').each(function (e){
                    var option = $('<option value="' + (currentYear - i) + '">' + (currentYear - i) + '</option>');
                    $(this).append(option);
                });
            }

            getStatisticDaily();
            getStatisticWeekly();
            getStatisticMonthly();
            getStatisticQuarterly();
            getStatisticYearly();
        });

        function getStatisticDaily(){
            $.get('@Url.Action("GetStatisticDaily", "StatisticalReport")',
                function (result) {
                    var jsonResult = $.parseJSON(result);
                    $('#imgDaily').attr('src', '@Umbraco.Content(CurrentPage.Id).GetPropertyValue("dailyImage").Url');
                });
        }

        function getStatisticWeekly(){
            var year = $('#weeklyFilter option:selected').text();

            $.get('@Url.Action("GetStatistic", "Statistic")' + '?nodeId=@CurrentPage.Id&year=' + year + '&type=weekly', function (result) {
                if($.fn.DataTable.isDataTable('#weeklyTable')){
                    var datatable = $('#weeklyTable').DataTable();
                    datatable.clear();
                    datatable.rows.add(result).draw();
                }else {
                    $('#weeklyTable').dataTable({
                        'processing': true,
                        'paging': true,
                        'deferRender': true,
                        'data': result,
                        'columns': [
                            { 'data': 'id' },
                            { 'data': 'number' },
                            { 'data': 'description' },
                            {
                                'data': 'file',
                                render: function( data, type, full, meta ) {
                                    return '<a target="_blank" href="' + data + '" class="red"><span class="fa fa-file"></span> @Umbraco.GetDictionaryValue("download")</a>';
                                }
                            }
                        ],
                        'columnDefs': [{
                            'targets': [0,1],
                            'createdCell' : function (td, cellData, rowData, row, col) {
                                return $(td).addClass('text-center');
                            }
                        }],
                        "rowCallback": function (row, data, iDisplayIndex) {
                            var info = this.api().page.info();
                            var page = info.page;
                            var length = info.length;
                            var index = (page * length + (iDisplayIndex + 1));
                            $('td:eq(0)', row).html(index);
                        },
                        "order": [[ 0, "desc" ]],
                    });
                }
                });
        }

        function getStatisticMonthly(){
            var year = $('#monthlyFilter option:selected').text();

            $.get('@Url.Action("GetStatistic", "Statistic")' + '?nodeId=@CurrentPage.Id&year=' + year + '&type=monthly', function (result) {
                if($.fn.DataTable.isDataTable('#monthlyTable')){
                    var datatable = $('#monthlyTable').DataTable();
                    datatable.clear();
                    datatable.rows.add(result).draw();
                }else {
                    $('#monthlyTable').dataTable({
                        'processing': true,
                        'paging': true,
                        'deferRender': true,
                        'data': result,
                        'columns': [
                            { 'data': 'id' },
                            { 'data': 'number' },
                            { 'data': 'description' },
                            {
                                'data': 'file',
                                render: function( data, type, full, meta ) {
                                    return '<a target="_blank" href="' + data + '" class="red"><span class="fa fa-file"></span> @Umbraco.GetDictionaryValue("download")</a>';
                                }
                            }
                        ],
                        'columnDefs': [{
                            'targets': [0,1],
                            'createdCell' : function (td, cellData, rowData, row, col) {
                                return $(td).addClass('text-center');
                            }
                        }],
                        "rowCallback": function (row, data, iDisplayIndex) {
                            var info = this.api().page.info();
                            var page = info.page;
                            var length = info.length;
                            var index = (page * length + (iDisplayIndex + 1));
                            $('td:eq(0)', row).html(index);
                        },
                        "order": [[ 0, "desc" ]],
                    });
                }
            });
        }

        function getStatisticQuarterly(){
            var year = $('#quarterlyFilter option:selected').text();

            $.get('@Url.Action("GetStatistic", "Statistic")' + '?nodeId=@CurrentPage.Id&year=' + year + '&type=quarterly',
                function (result) {
                    if($.fn.DataTable.isDataTable('#quarterlyTable')){
                        var datatable = $('#quarterlyTable').DataTable();
                        datatable.clear();
                        datatable.rows.add(result).draw();
                    }else {
                        $('#quarterlyTable').dataTable({
                            'processing': true,
                            'paging': true,
                            'deferRender': true,
                            'data': result,
                            'columns': [
                                { 'data': 'id' },
                                { 'data': 'number' },
                                { 'data': 'description' },
                                {
                                    'data': 'file',
                                    render: function( data, type, full, meta ) {
                                        return '<a target="_blank" href="' + data + '" class="red"><span class="fa fa-file"></span> @Umbraco.GetDictionaryValue("download")</a>';
                                    }
                                }
                            ],
                            'columnDefs': [{
                                'targets': [0,1],
                                'createdCell' : function (td, cellData, rowData, row, col) {
                                    return $(td).addClass('text-center');
                                }
                            }],
                            "rowCallback": function (row, data, iDisplayIndex) {
                                var info = this.api().page.info();
                                var page = info.page;
                                var length = info.length;
                                var index = (page * length + (iDisplayIndex + 1));
                                $('td:eq(0)', row).html(index);
                            },
                            "order": [[ 0, "desc" ]],
                        });
                    }
                });
        }

        function getStatisticYearly(){
            var year = $('#yearlyFilter option:selected').text();

            $.get('@Url.Action("GetStatistic", "Statistic")' + '?nodeId=@CurrentPage.Id&year=' + year + '&type=yearly', function (result) {
                if($.fn.DataTable.isDataTable('#yearlyTable')){
                    var datatable = $('#yearlyTable').DataTable();
                    datatable.clear();
                    datatable.rows.add(result).draw();
                }else {
                    $('#yearlyTable').dataTable({
                        'processing': true,
                        'paging': true,
                        'deferRender': true,
                        'data': result,
                        'columns': [
                            { 'data': 'id' },
                            { 'data': 'number' },
                            { 'data': 'description' },
                            {
                                'data': 'file',
                                render: function( data, type, full, meta ) {
                                    return '<a target="_blank" href="' + data + '" class="red"><span class="fa fa-file"></span> @Umbraco.GetDictionaryValue("download")</a>';
                                }
                            }
                        ],
                        'columnDefs': [{
                            'targets': [0,1],
                            'createdCell' : function (td, cellData, rowData, row, col) {
                                return $(td).addClass('text-center');
                            }
                        }],
                        "rowCallback": function (row, data, iDisplayIndex) {
                            var info = this.api().page.info();
                            var page = info.page;
                            var length = info.length;
                            var index = (page * length + (iDisplayIndex + 1));
                            $('td:eq(0)', row).html(index);
                        },
                        "order": [[ 0, "desc" ]],
                    });
                }
            });
        }

    </script>
}
