@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
	Layout = "Master.cshtml";
}

@section Styles {
    <link href="@Url.Content("/assets/css/vendor/datatables.min.css")" rel="stylesheet" type="text/css" />
}

<main class="sticky-footer-container-item --pushed">
    <div class="container top-space">
        @{
            IPublishedContent current = (CurrentPage);
            Stack<dynamic> pages = new Stack<dynamic>();
            while (current.Level > 1)
            {
                pages.Push(current);
                current = current.Parent;
            }
        }

        <ul class="breadcrumb block">
            <li><a href="/"><span class="fa fa-home"></span></a></li>
            @foreach (var page in pages)
            {
                var cls = page.Id == CurrentPage.Id ? "current" : "";
                if (page.DocumentTypeId != 1237){
                    <li class="@cls"><a href="@page.Url">@page.Name</a></li>                    
                } else {
                    <li class="@cls"><a href="" class="disable"><span>@page.Name</span></a></li>
                }
            }
        </ul>
        <div class="page-title-container">
            <h1 class="page-title">@Umbraco.TypedContent(CurrentPage.Id).PageTitle</h1>
        </div>
        <div class="">
            <div class="block flex v-center">
                <span class="form-label-announcement">@Umbraco.GetDictionaryValue("date")</span>
                <div class="calendar-box width-block">
                    <input id="dateFilter" type="date" class="form-input form-input--block date-picker-js">
                </div>
            </div>
            <div class="block-double">
                <button class="btn btn-primary" onclick="getRecapitulation()">@Umbraco.GetDictionaryValue("search")</button>
            </div>
        </div>
    </div>
    <div class="main-content content-push">
        <div class="container">
            <div class="block">
                <table id="recapTable" class="table table--zebra table-content-page">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>ID Instrument</th>
                            <th>ID Board</th>
                            <th>Volume</th>
                            <th>@Umbraco.GetDictionaryValue("value")</th>
                            <th>@Umbraco.GetDictionaryValue("frequency")</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
                <div hidden="true">
                    <table id="recapDownloadTable" class="table table--zebra table-content-page">
                        <thead>
                            <tr>
                                <th>No</th>
                                <th>ID Instrument</th>
                                <th>ID Board</th>
                                <th>Volume</th>
                                <th>@Umbraco.GetDictionaryValue("value")</th>
                                <th>@Umbraco.GetDictionaryValue("frequency")</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="text-right block">
                <a onclick="downloadRecap()" href="" class="btn btn-primary --rounded"><span class="fa fa-download"></span> @Umbraco.GetDictionaryValue("download")</a>
            </div>
        </div>
    </div>
</main>

@section Scripts{
    <script type="text/javascript" src="/assets/js/vendor/datatables.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $('#dateFilter').val(moment().add(-1, 'days').format('DD-MM-YYYY'))
            if(currentLang != "en-us"){
                jQuery.extend( jQuery.fn.dataTableExt.oSort, {
                    "formatted-num-pre": function ( a ) {
                        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\,]/g, "" );
                        return parseFloat( a );
                    },
                 
                    "formatted-num-asc": function ( a, b ) {
                        return a - b;
                    },
                 
                    "formatted-num-desc": function ( a, b ) {
                        return b - a;
                    }
                } );
            }else{
                jQuery.extend( jQuery.fn.dataTableExt.oSort, {
                    "formatted-num-pre": function ( a ) {
                        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
                        return parseFloat( a );
                    },
                 
                    "formatted-num-asc": function ( a, b ) {
                        return a - b;
                    },
                 
                    "formatted-num-desc": function ( a, b ) {
                        return b - a;
                    }
                } );
            }
            getRecapitulation();
        });

        function getRecapitulation(){
            var dateFilter = $('#dateFilter').val();
            if (dateFilter !== ""){
                dateFilter = moment(dateFilter, "DD-MM-YYYY").format('YYYYMMDD');
            }

            if($.fn.DataTable.isDataTable('#recapTable')){
                var url = '@Url.Action("GetRecapSummary", "TradingSummary")?Length=10000&date=' + dateFilter;
                $('#recapTable').DataTable().ajax.url(url).load();
            } else {
                $('#recapTable').dataTable({
                    'ajax': {
                        'url': '@Url.Action("GetRecapSummary", "TradingSummary")?Length=10000&date=' + dateFilter,
                    },
                    'filter': true,
                    'sort': true,
                    'serverSide': false,
                    'processing': true,
                    'paging': true,
                    'deferRender': true,
                    'columns': [
                        { 'data': 'No' },
                        { 'data': 'IDInstrument' },
                        { 'data': 'IDBoard' },
                        { 'data': 'Volume' },
                        { 'data': 'Value' },
                        { 'data': 'Frequency' }
                    ],
                    'columnDefs': [
                        {
                            'targets': [3,4,5],
                            'createdCell' : function (td, cellData, rowData, row, col) {
                                return $(td).addClass('text-right');
                            },
                            'render' : function ( data, type, row, meta ) {
                                return data.toLocaleString(currentLang);
                            },
                            type: 'formatted-num'
                        },
                        {
                            'targets': [0,1,2],
                            'createdCell' : function (td, cellData, rowData, row, col) {
                                return $(td).addClass('text-center');
                            }
                        }
                    ],
                    "rowCallback": function (row, data, iDisplayIndex) {
                        var info = this.api().page.info();
                        var page = info.page;
                        var length = info.length;
                        var index = (page * length + (iDisplayIndex + 1));
                        $('td:eq(0)', row).html(index);
                    },
                });                        
            }
        }

        function downloadRecap() {
            var dateFilter = $('#dateFilter').val();
            if (dateFilter !== ""){
                dateFilter = moment(dateFilter, "DD-MM-YYYY").format('YYYYMMDD');
            }

            var isDataTable = $.fn.DataTable.isDataTable('#recapDownloadTable');
            // if (!isDataTable) {
            //     dateFilter = '';
            // }

            $.get('@Url.Action("DownloadRecapSummary", "TradingSummary")?date=' + dateFilter, function(response){
                if(!isDataTable){
                    $('#recapDownloadTable').DataTable({
                        'paging': true,
                        'data': response.Results,
                        'buttons': [{ 
                            'extend': 'excelHtml5', 
                            'title': function () {
                                return '@Umbraco.TypedContent(CurrentPage.Id).PageTitle' + '-' + dateFilter;
                            }
                        }],
                        'columns': [
                            { 'data': 'No' },
                            { 'data': 'IDInstrument' },
                            { 'data': 'IDBoard' },
                            { 'data': 'Volume' },
                            { 'data': 'Value' },
                            { 'data': 'Frequency' }
                        ],
                        "rowCallback": function (row, data, iDisplayIndex) {
                            var info = this.api().page.info();
                            var page = info.page;
                            var length = info.length;
                            var index = (page * length + (iDisplayIndex + 1));
                            $('td:eq(0)', row).html(index);
                        },
                    });
                } else {
                    var datatable = $('#recapDownloadTable').DataTable();
                    datatable.clear();
                    datatable.rows.add(response.Results).draw();
                }

                $('#recapDownloadTable').DataTable().buttons().trigger();
            });
        }

    </script>
}