@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
	Layout = "Master.cshtml";
}

<main class="sticky-footer-container-item --pushed" ng-controller="AnnouncementController as annoucnementCtrl">
    <div class="container top-space">
        @{
            IPublishedContent current = (CurrentPage);
            Stack<dynamic> pages = new Stack<dynamic>();
            while (current.Level > 1)
            {
                pages.Push(current);
                current = current.Parent;
            }
        }

        <ul class="breadcrumb block">
            <li><a href="/"><span class="fa fa-home"></span></a></li>
            @foreach (var page in pages)
            {
                var cls = page.Id == CurrentPage.Id ? "current" : "";
                if (page.DocumentTypeId != 1237){
                    <li class="@cls"><a href="@page.Url">@page.Name</a></li>                    
                } else {
                    <li class="@cls"><a href="" class="disable"><span>@page.Name</span></li>
                }
            }
        </ul>
        <div class="page-title-container">
            @if (Umbraco.TypedContent(CurrentPage.Id) != null){
                <h1 class="page-title">@Umbraco.TypedContent(CurrentPage.Id).Name</h1>
            }
        </div>
        <div action="" class="block-double">
            <div class="block flex v-center">
                <span class="form-label-announcement">@Umbraco.GetDictionaryValue("keyword")</span>
                <input id="keywordInput" type="text" class="form-input form-input--block" placeholder="@Umbraco.GetDictionaryValue("keyword")" maxlength="100">
            </div>
            <div class="block flex v-center">
                <span class="form-label-announcement">@Umbraco.GetDictionaryValue("from")</span>
                <div class="calendar-box width-block">
                    <input id="dateFromInput" type="date" class="form-input form-input--block date-picker-js">
                </div>
                <span class="form-label-announcement">@Umbraco.GetDictionaryValue("to")</span>
                <div class="calendar-box width-block">
                    <input id="dateToInput" type="date" class="form-input form-input--block date-picker-js">
                </div>
            </div>

            <div class="block flex v-center">
                <span class="form-label-announcement">&nbsp;</span>
                <button id="searchBtn" class="btn btn-primary">@Umbraco.GetDictionaryValue("search")</button>
            </div>
        </div>
    </div>
    <div class="main-content content-push">
        <div class="container white-container">
            <div class="loader-box" ng-class="{'is-active' : loading}">
                <div class="loader-container">
                    <img src="/assets/img/ajax-loader.gif" alt="">
                </div>
            </div>
            <div class="block">
                <div class="border-bottom">
                    <div class="container-space container-space--big" dir-paginate="res in announcement | itemsPerPage: limit" total-items="totalUsers" current-page="pagination.current">
                        <time class="financial-report-date">{{res.PublishDate | date:'dd MMMM yyyy HH:mm:ss'}}</time>
                        <a href="{{res.Attachments[0].FullSavePath}}" target="_blank" class="red">
                            <p class="text-bigger text-bold block-clear">{{res.Title}} [{{res.Code}}]</p>
                        </a>
                        Attachment:<br/>
                        <div ng-repeat="attachments in res.Attachments | filter:{ IsAttachment : 1 }">
                            <a href="{{attachments.FullSavePath}}" target="_blank" class="red"><span class="fa fa-file"></span> {{attachments.OriginalFilename}}</a>
                        </div>
                    </div>
                </div>
            </div>
            <dir-pagination-controls on-page-change="pageChanged(newPageNumber)"></dir-pagination-controls>
        </div>
    </div>
</main>

@section Scripts {
    <script>
        const app = angular.module('app', ['angularUtils.directives.dirPagination'])
        app.controller('AnnouncementController', ['$scope', '$http', function($scope, $http){

            $scope.announcement = [];
            $scope.totalUsers = 0;
            $scope.currentPage = 1;
            $scope.limit = 10;
            $scope.loading = false;
            getResultsPage(1);

            $scope.pagination = {
                current: 1
            };

            $scope.pageChanged = function(newPage) {
                getResultsPage(newPage);
            };

            $('#searchBtn').on('click', function(e){
                getResultsPage(1);
            });

            function getResultsPage(pageNumber) {
                $scope.loading = true;
                
                var dateFrom = $('#dateFromInput').val() === '' ? '0' : moment($('#dateFromInput').val(), 'DD-MM-YYYY').format('YYYYMMDD');
                var dateTo = $('#dateToInput').val() === '' ? '0' : moment($('#dateToInput').val(), 'DD-MM-YYYY').format('YYYYMMDD');

                $http.get("@Url.Action("GetAllAnnouncement", "NewsAnnouncement")" + 
                '?keywords=' + $('#keywordInput').val() + 
                '&pageNumber=' +(pageNumber) + 
                '&pageSize=' + $scope.limit + 
                '&dateFrom=' + dateFrom +
                '&dateTo=' + dateTo + '&language=' + currentLang).then(function (result) {
                    var data = result.data;
                    var dataItems = data.Items;

                    for (var i = 0; i < dataItems.length; i++) {
                        if (dataItems[i].PdfPath !== "") {
                            dataItems[i].PdfPath = $.parseJSON(dataItems[i].PdfPath);
                            for (var j = 0; j < dataItems[i].PdfPath.length; j++) {
                                var pdfPathItem = dataItems[i].PdfPath[j];
                                if (pdfPathItem !== undefined) {
                                    var fullSavePathFile = pdfPathItem.FullSavePath;
                                    dataItems[i].PdfPath[j].FullSavePath = fullSavePathFile.substring(fullSavePathFile.indexOf('/StaticData'), fullSavePathFile.length);
                                }
                            }
                        }
                    }

                    $scope.announcement = dataItems;
                    $scope.totalUsers = data.ItemCount;

                    $scope.loading = false;
                });
            }

        }])
    </script>
}