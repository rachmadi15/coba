@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Master.cshtml";
}

@section Styles {
    <link href="@Url.Content("/assets/css/vendor/datatables.min.css")" rel="stylesheet" type="text/css" />
}

<main class="sticky-footer-container-item --pushed">
    <div class="container top-space">
        @{
            IPublishedContent current = (CurrentPage);
            Stack<dynamic> pages = new Stack<dynamic>();
            while (current.Level > 1)
            {
                pages.Push(current);
                current = current.Parent;
            }
        }

        <ul class="breadcrumb block">
            <li><a href="/"><span class="fa fa-home"></span></a></li>
            @foreach (var page in pages)
            {
                var cls = page.Id == CurrentPage.Id ? "current" : "";
                if (page.DocumentTypeId != 1237){
                    <li class="@cls"><a href="@page.Url">@page.Name</a></li>                    
                } else {
                    <li class="@cls"><a href="" class="disable"><span>@page.Name</span></a></li>
                }
            }
        </ul>
        <div class="page-title-container">
            <h1 class="page-title">@CurrentPage.Name</h1>
        </div>
        <div class="block-double">
            <div class="block flex v-center">
                <span class="form-label-announcement">Search by</span>
                <select name="code" id="emitenList" class="form-input form-input--block select2-js">
                </select>
            </div>
            <div class="block flex v-center">
                <span class="form-label-announcement">&nbsp;</span>
                <button class="btn btn-primary" onclick="getPerformanceSummary();">@Umbraco.GetDictionaryValue("search")</button>
            </div>
        </div>
        <table id="performanceTable" class="table table--zebra table-content-page table-thead-nowrap width-block">
            <thead>
                <tr>
                    <th>No</th>
                    <th>@Umbraco.GetDictionaryValue("code")</th>
                    <th>@Umbraco.GetDictionaryValue("name")</th>
                    <th>@Umbraco.GetDictionaryValue("Download")</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</main>

@section Scripts{
    <script type="text/javascript" src="/assets/js/vendor/datatables.min.js"></script>
    <script type="text/javascript">
        $(function () {
            getEmitenType();
            getPerformanceSummary();
        });

        function getEmitenType() {
            $.get('@Url.Action("GetEmiten", "Helper")?emitenType=s', function (result) {
                $('#emitenList').append('<option value="">' + "@Umbraco.GetDictionaryValue("choose emiten")" + '</option>');
                for (var i = 0; i < result.length; i++) {
                    $('#emitenList').each(function(){
                        $(this).append('<option value="' + result[i].KodeEmiten + '">' + result[i].KodeEmiten + ' - ' + result[i].NamaEmiten + '</option>');
                    });
                }
            });
        }

        function getPerformanceSummary(){
            if($.fn.DataTable.isDataTable('#performanceTable')){
                var selectedEmiten = $('#emitenList option:selected').val();
                var url = '@Url.Action("GetPerformanceSummary", "PerformanceSummary")?nodeId=@CurrentPage.Id&code=' + selectedEmiten;
                $('#performanceTable').DataTable().ajax.url(url).load();
            }else {
                $('#performanceTable').dataTable({
                    'ajax': {
                        'url': '@Url.Action("GetPerformanceSummary", "PerformanceSummary")?nodeId=@CurrentPage.Id',
                    },
                    'filter': false,
                    'sort': false,
                    'serverSide': true,
                    'processing': true,
                    'paging': true,
                    'deferRender': true,
                    'columns': [
                        { 'data': 'id' },
                        { 'data': 'code' },
                        { 'data': 'name' },
                        { 
                            'data': 'file',
                            render: function( data, type, full, meta ) {
                                if (data !== null){
                                    return '<a target="_blank" href="' + data + '" class="red"><span class="fa fa-file"></span> @Umbraco.GetDictionaryValue("download")</a>';
                                }
                                return '';
                            }
                        }
                    ],
                    "rowCallback": function (row, data, iDisplayIndex) {
                        var info = this.api().page.info();
                        var page = info.page;
                        var length = info.length;
                        var index = (page * length + (iDisplayIndex + 1));
                        $('td:eq(0)', row).html(index);
                    },
                });
            }
        }
    </script>
}