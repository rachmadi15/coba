@using System.Configuration
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Master.cshtml";
}

@section Styles {
    <link href="@Url.Content("/assets/css/jquery.dataTables.min.css")" rel="stylesheet" type="text/css" />
}

<main class="sticky-footer-container-item --pushed">
    <div class="container top-space">
        @{
            IPublishedContent current = (CurrentPage);
            Stack<dynamic> pages = new Stack<dynamic>();
            while (current.Level > 1)
            {
                pages.Push(current);
                current = current.Parent;
            }
        }

        <ul class="breadcrumb block">
            <li><a href="/"><span class="fa fa-home"></span></a></li>
            @foreach (var page in pages)
            {
                var cls = page.Id == CurrentPage.Id ? "current" : "";
                if (page.DocumentTypeId != 1237){
                    <li class="@cls"><a href="@page.Url">@page.Name</a></li>                    
                } else {
                    <li class="@cls"><a href="" class="disable"><span>@page.Name</span></li>
                }
            }
        </ul>
        <div class="page-title-container">
            <h1 class="page-title">@CurrentPage.Name</h1>
        </div>
        <div action="" class="block-double">
            <div class="block flex v-center">
                <span class="form-label-announcement">@Umbraco.GetDictionaryValue("search by year")</span>
                <select name="year" id="yearList" class="form-input form-input--block select2-js">
                </select>
            </div>
            
            <div class="block flex v-center">
                <span class="form-label-announcement">&nbsp;</span>
                <button class="btn btn-primary" onclick="getMarginStocks()">@Umbraco.GetDictionaryValue("search")</button>
            </div>
        </div>
        <table id="stockTable" class="table table--zebra table-content-page table-thead-nowrap ">
            <thead>
                <tr>
                    <th>No</th>
                    <th>@Umbraco.GetDictionaryValue("Description")</th>
                    <th>@Umbraco.GetDictionaryValue("size")</th>
                    <th>@Umbraco.GetDictionaryValue("Download")</th>
                </tr>
            </thead>
            <tbody>                        
            </tbody>
        </table>
    </div>
</main>

@section Scripts{
    <script type="text/javascript" src="/assets/js/vendor/jquery.dataTables.min.js"></script>
    <script type="text/javascript">
        $(function () {
            var currentYear = moment().format('YYYY');
            for (var i = 0; i <= @ConfigurationManager.AppSettings["maxYear"]; i++) {
                $('#yearList').append('<option value="' + (currentYear - i) + '">' + (currentYear - i) + '</option>')
            }

            getMarginStocks();
        });

        function getMarginStocks(){
            var selectedYear = $('#yearList option:selected').val();

            $.get('@Url.Action("GetMarginStock", "MarginStock")' + '?nodeId=@CurrentPage.Id&year=' + selectedYear, function (result) {
                if($.fn.DataTable.isDataTable('#stockTable')){
                    var datatable = $('#stockTable').DataTable();
                    datatable.clear();
                    datatable.rows.add(result).draw();
                }else {
                    $('#stockTable').dataTable({
                        'processing': true,
                        'paging': true,
                        'deferRender': true,
                        'data': result,
                        'columns': [
                            { 'data': 'id' },
                            { 'data': 'description' },
                            { 'data': 'size' },                            
                            { 
                                'data': 'file',
                                render: function( data, type, full, meta ) {
                                    return '<a target="_blank" href="' + data + '" class="red"><span class="fa fa-file"></span> @Umbraco.GetDictionaryValue("download")</a>';
                                }
                            }
                        ],
                        'columnDefs': [
                            {
                                'targets': [0,3],
                                'createdCell' : function (td, cellData, rowData, row, col) {
                                    return $(td).addClass('text-center');
                                }
                            },
                            {
                                'targets': [2],
                                'createdCell' : function (td, cellData, rowData, row, col) {
                                    return $(td).addClass('text-right');
                                }
                            }
                        ],
                        "rowCallback": function (row, data, iDisplayIndex) {
                            var info = this.api().page.info();
                            var page = info.page;
                            var length = info.length;
                            var index = (page * length + (iDisplayIndex + 1));
                            $('td:eq(0)', row).html(index);
                        },
                        "order": [[ 0, 'desc' ]],
                    });                     
                }
            });
        }

    </script>
}