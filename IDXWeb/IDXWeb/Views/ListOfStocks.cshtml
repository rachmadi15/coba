@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Master.cshtml";
}

@section Styles {
    <link href="@Url.Content("/assets/css/jquery.dataTables.min.css")" rel="stylesheet" type="text/css" />
}

<main class="sticky-footer-container-item --pushed">
    <div class="container top-space">
        @{
            IPublishedContent current = (CurrentPage);
            Stack<dynamic> pages = new Stack<dynamic>();
            while (current.Level > 1)
            {
                pages.Push(current);
                current = current.Parent;
            }
        }

        <ul class="breadcrumb block">
            <li><a href="/"><span class="fa fa-home"></span></a></li>
            @foreach (var page in pages)
            {
                var cls = page.Id == CurrentPage.Id ? "current" : "";
                if (page.DocumentTypeId != 1237){
                    <li class="@cls"><a href="@page.Url">@page.Name</a></li>                    
                } else {
                    <li class="@cls"><a href="" class="disable"><span>@page.Name</span></li>
                }
            }
        </ul>
        <div class="page-title-container">
            <h1 class="page-title">@Umbraco.TypedContent(CurrentPage.Id).PageTitle</h1>
        </div>
        <div action="" class="block-double">
            <div class="block flex v-center">
                <span class="form-label-announcement">@Umbraco.GetDictionaryValue("code")</span>
                <select name="code" id="emitenList" class="form-input form-input--block select2-js"></select>
            </div>
            <div class="block flex v-center">
                <span class="form-label-announcement">@Umbraco.GetDictionaryValue("sector")</span>
                <select name="sector" id="sectorList" class="form-input form-input--block select2-js"></select>
            </div>
            <div class="block flex v-center">
                <span class="form-label-announcement">@Umbraco.GetDictionaryValue("board")</span>
                <select name="board" id="boardList" class="form-input form-input--block select2-js"></select>
            </div>

            <div class="block flex v-center">
                <span class="form-label-announcement">&nbsp;</span>
                <button class="btn btn-primary" onclick="getSecuritiesStock()">@Umbraco.GetDictionaryValue("search")</button>
            </div>
        </div>
        <table id="stockTable" class="table table--zebra table-content-page table-thead-nowrap ">
            <thead>
                <tr>
                    <th>No</th>
                    <th>@Umbraco.GetDictionaryValue("code")</th>
                    <th>@Umbraco.GetDictionaryValue("name")</th>
                    <th>@Umbraco.GetDictionaryValue("listing date")</th>
                    <th>@Umbraco.GetDictionaryValue("share")</th>
                    <th>@Umbraco.GetDictionaryValue("listing board")</th>
                </tr>
            </thead>
            <tbody>                        
            </tbody>
        </table>
    </div>
</main>

@section Scripts{
    <script type="text/javascript" src="/assets/js/vendor/jquery.dataTables.min.js"></script>
    <script type="text/javascript">
        $(function () {
        	getEmitenType();
            getSectorList();
            getBoardList();
        	getSecuritiesStock();
        });

        function getEmitenType() {
            $.get('@Url.Action("GetEmiten", "Helper")?emitenType=s', function (result) {
                $('#emitenList').append('<option value="">' + "@Umbraco.GetDictionaryValue("choose emiten")" + '</option>');
                for (var i = 0; i < result.length; i++) {
                    $('#emitenList').each(function(){
                        $(this).append('<option value="' + result[i].KodeEmiten + '">' + result[i].KodeEmiten + ' - ' + result[i].NamaEmiten + '</option>');
                    });
                }
            });
        }

        function getSectorList() {
            var sectorDescList = [
				'Agriculture', 
                'Basic Industry and Chemicals', 
                'Consumer Goods Industry', 
                'Finance', 
                'Infrastructure, Utilities and Transportation', 
                'Mining', 
                'Miscellaneous Industry', 
                'Property, Real Estate and Building Construction', 
                'Trade, Service, and Invesment',
            ];
            $.get('@Url.Action("GetSectors", "Helper")', function (result) {
                $('#sectorList').append('<option value="">' + "@Umbraco.GetDictionaryValue("select sector")" + '</option>');
				var sectorIndex = 0;
                for (var i = 0; i < result.length; i++) {
                    if (result[i] !== '') {
                        $('#sectorList').append('<option value="' + result[i] + '">' + sectorDescList[sectorIndex] + '</option>');
						sectorIndex++;
                    }
                }
            });
        }

        function getBoardList() {
            $.get('@Url.Action("GetBoards", "Helper")',
                function (result) {
                    $('#boardList').append('<option value="">' + "@Umbraco.GetDictionaryValue("select board")" + '</option>');
                    for (var i = 0; i < result.length; i++) {
                        if (result[i] !== '') {
                            $('#boardList').append('<option value="' + result[i] + '">' + result[i] + '</option>');
                        }
                    }
                });
        }

        function getSecuritiesStock(){
        	var selectedCode = $('#emitenList option:selected').val();

        	if (selectedCode == "@Umbraco.GetDictionaryValue("choose emiten")" || selectedCode == undefined) {
        		selectedCode = "";
        	}

        	var selectedSector = $('#sectorList option:selected').val();

        	if (selectedSector == '@Umbraco.GetDictionaryValue("select sector")' || selectedSector == undefined) {
        		selectedSector = "";
        	}

        	var selectedBoard = $('#boardList option:selected').val();

        	if (selectedBoard == '@Umbraco.GetDictionaryValue("select board")' || selectedBoard == undefined) {
        		selectedBoard = "";
        	}

            if($.fn.DataTable.isDataTable('#stockTable')){
                var url = '@Url.Action("GetSecuritiesStock", "StockData")' + '?code=' + selectedCode + 
                '&sector=' + selectedSector + '&board=' + selectedBoard;
                $('#stockTable').DataTable().ajax.url(url).load();
            }else {
                $('#stockTable').dataTable({
                    'ajax': {
                        'url': '@Url.Action("GetSecuritiesStock", "StockData")' + '?code=' + selectedCode + 
                        '&sector=' + selectedSector + '&board=' + selectedBoard
                    },
                    'filter': false,
                    'sort': false,
                    'serverSide': true,
                    'processing': true,
                    'paging': true,
                    'deferRender': true,
                    'columns': [
                        { 'data': 'Code' },
                        { 'data': 'Code' },
                        { 'data': 'Name' },
                        { 
                            'data': 'ListingDate',
                            render: function( data, type, full, meta ) {
                                return moment(data, "YYYY-MM-DDT00:00:00").format('DD MMM YYYY');
                            }
                        },
                        { 
                            'data': 'Shares',
                            'createdCell' : function (td, cellData, rowData, row, col) {
                                return $(td).addClass('text-right');
                            },
                            render: function( data, type, full, meta ) {
                                return data.toLocaleString(currentLang);
                            }
                        },
                        { 'data': 'ListingBoard' }
                    ],
                    "rowCallback": function (row, data, iDisplayIndex) {
                        var info = this.api().page.info();
                        var page = info.page;
                        var length = info.length;
                        var index = (page * length + (iDisplayIndex + 1));
                        $('td:eq(0)', row).html(index);
                    },
                });                     
            }
        }

    </script>
}